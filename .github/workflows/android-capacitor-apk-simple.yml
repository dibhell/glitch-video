name: Build Android APK (Capacitor)

on: workflow_dispatch

env:
  APP_ID: com.example.glitch
  APP_NAME: Glitch Video
  NODE_VERSION: '20'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Detect project directory
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          if [[ -f package.json ]]; then echo "dir=." >> "$GITHUB_OUTPUT"; exit 0; fi
          CANDIDATE=$(find . -maxdepth 3 -type f -name 'package.json' -not -path '*/node_modules/*' -not -path '*/android/*' | head -n 1)
          if [[ -z "${CANDIDATE}" ]]; then echo "::error::No package.json found"; exit 1; fi
          echo "dir=$(dirname "${CANDIDATE}")" >> "$GITHUB_OUTPUT"

      - name: Install JS deps
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Build web app
        id: web
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          if npm run | grep -qE "[[:space:]]build"; then npm run build; fi
          for d in dist build out; do
            if [ -d "$d" ]; then echo "web_dir=$d" >> "$GITHUB_OUTPUT"; exit 0; fi
          done
          echo "::error::Could not find 'dist' or 'build' or 'out' in $PWD"; exit 1

      - name: Install Capacitor tooling
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          npm i -D @capacitor/cli@latest
          npm i @capacitor/core@latest @capacitor/android@latest

      - name: Generate capacitor.config.json
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          printf '{
  "appId": "%s",
  "appName": "%s",
  "webDir": "%s",
  "bundledWebRuntime": false
}
' "$APP_ID" "$APP_NAME" "${{ steps.web.outputs.web_dir }}" > capacitor.config.json
          cat capacitor.config.json

      - name: Add Android platform & sync
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          npx cap add android || true
          npx cap copy
          npx cap sync

      - name: Apply Android res overrides (icons)
        working-directory: ${{ steps.detect.outputs.dir }}
        shell: bash
        run: |
          set -euo pipefail
          if [ -d android-res-overrides ]; then
            mkdir -p android/app/src/main/res
            cp -a android-res-overrides/. android/app/src/main/res/
            echo "Applied android-res-overrides"
          else
            echo "No android-res-overrides dir; skipping"
          fi

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android licenses
        run: yes | sdkmanager --licenses

      - name: Cache Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK
        run: |
          cd "${{ steps.detect.outputs.dir }}/android"
          ./gradlew :app:assembleDebug --stacktrace

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: ${{ steps.detect.outputs.dir }}/android/app/build/outputs/apk/debug/app-debug.apk
